#!/bin/bash
# An init.d script for running a Node.js process as a service using Forever as
# the process monitor. For more configuration options associated with Forever,
# see: https://github.com/nodejitsu/forever
#
# kDVR              This shell script takes care of starting and stopping the Kaltura kDVR Worker service
#
# chkconfig: 2345 13 87
# description: Kaltura DVR Worker

### BEGIN INIT INFO
# Provides:          kDvrWorker
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: Start/stop Kaltura DVR Worker
# Description:       Control the Kaltura DVR Worker service
### END INIT INFO

NAME="kDVR Worker"
KDVR_WORKER_PREFIX="/opt/kaltura/liveDVR"
NODE_PATH="$KDVR_WORKER_PREFIX/node_modules"
APPLICATION_PATH="$KDVR_WORKER_PREFIX/lib/Driver.js"
LOG_DIR="/var/log"
PIDFILE="$LOG_DIR/kDvrWorker.pid"
LOGFILE="$LOG_DIR/kDvrWorker-forever.log"
MIN_UPTIME="5000"
SPIN_SLEEP_TIME="2000"
export PATH=$PATH:$NODE_PATH/forever/bin:/usr/local/bin

start() {
    echo `forever list` | grep -q "$APPLICATION_PATH"
    if [ "$?" -eq "0" ]; then
        echo "$NAME is running."
        RETVAL=0
    else
        echo "Starting $NAME"
        forever \
          --pidFile $PIDFILE \
          -a \
          -l $LOGFILE \
          --minUptime $MIN_UPTIME \
          --spinSleepTime $SPIN_SLEEP_TIME \
    	start $APPLICATION_PATH prefix:0&
        echo "Starting $NAME"
        forever \
          --pidFile $PIDFILE \
          -a \
          -l $LOGFILE \
          --minUptime $MIN_UPTIME \
          --spinSleepTime $SPIN_SLEEP_TIME \
            start $APPLICATION_PATH prefix:1&
        RETVAL=$?
    fi

}

stop() {
    if [ -f $PIDFILE ]; then
        echo "Shutting down $NAME"
        # Tell Forever to stop the process.
        forever stop $APPLICATION_PATH 2>&1 > /dev/null
        # Get rid of the pidfile, since Forever won't do that.
        rm -f $PIDFILE
        RETVAL=$?
    else
        echo "$NAME is not running."
        RETVAL=0
    fi
}

restart() {
    stop
    start
}

status() {
    echo `forever list` | grep -q "$APPLICATION_PATH"
    if [ "$?" -eq "0" ]; then
        echo "$NAME is running."
        RETVAL=0
    else
        echo "$NAME is not running."
        RETVAL=3
    fi
}

logRotated() {
        if [ -f $PIDFILE ]; then
                echo "Notify log rotate for $NAME."
                kill -USR1 `cat $PIDFILE`
                RETVAL=1
        else
                echo "$NAME is not running."
                RETVAL=0
        fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        restart
        ;;
 	logRotated)
        logRotated
        ;;

    *)
        echo "Usage: {start|stop|status|restart|logRotated}"
        exit 1
        ;;
esac
exit $RETVAL
